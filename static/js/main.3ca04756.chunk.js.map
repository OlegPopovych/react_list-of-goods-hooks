{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsWithKeys","map","elem","good","id","uuidv4","App","useState","sortParam","setSortParam","isReversed","setIsReversed","preparedGoods","goods","sort","firstGood","secondGood","Alphabetically","localeCompare","Length","length","reverse","getPreparedGoods","isSorted","className","type","classes","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KA+BKA,E,kFAPCC,EAbmC,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAG4CC,KAAI,SAACC,GACjD,MAAO,CACLC,KAAMD,EACNE,GAAIC,mB,SAIHN,K,gBAAAA,E,iCAAAA,M,KAUL,IA4BaO,EAAgB,WAC3B,MAAkCC,mBAAwB,IAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA/BiB,SACvBC,EADuB,GAGX,IADVL,EACS,EADTA,UAAWE,EACF,EADEA,WAEPE,EAAa,YAAOC,GAqB1B,OAnBIL,GACFI,EAAcE,MAAK,cAAgD,IAAvCC,EAAsC,EAA5CZ,KAA2Ba,EAAiB,EAAvBb,KACzC,OAAQK,GACN,KAAKT,EAASkB,eACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKjB,EAASoB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAKXV,GACFE,EAAcS,UAGTT,EAMeU,CACpBtB,EACA,CAAEQ,YAAWE,eAQTa,EAAYf,GAAaE,EAE/B,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,IAAcT,EAASkB,iBAEvCU,QAAS,kBAAMlB,EAAaV,EAASkB,iBAPvC,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,IAAcT,EAASoB,SAEvCQ,QAAS,kBAAMlB,EAAaV,EAASoB,SAPvC,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAahB,IAEjBiB,QAAS,kBAAMhB,GAAeD,IAPhC,qBAYCa,GAEG,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAlDnBhB,GAAc,QACdF,EAAa,KA8CL,sBAUN,6BACGG,EAAcX,KAAI,SAAAE,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SACGA,EAAKA,MADgBA,EAAKC,aCtIvCwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3ca04756.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classes from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\ntype Good = {\n  good: string;\n  id: string;\n};\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsWithKeys: Good[] = goodsFromServer.map((elem) => {\n  return {\n    good: elem,\n    id: uuidv4(),\n  };\n});\n\nenum SortType {\n  Length = 'Length',\n  Alphabetically = 'Alphabetically',\n}\n\ninterface SortParams {\n  sortParam: SortType | '';\n  isReversed: boolean;\n}\n\nconst getPreparedGoods = (\n  goods: Good[],\n  { sortParam, isReversed }: SortParams,\n): Good[] => {\n  const preparedGoods = [...goods];\n\n  if (sortParam) {\n    preparedGoods.sort(({ good: firstGood }, { good: secondGood }) => {\n      switch (sortParam) {\n        case SortType.Alphabetically:\n          return firstGood.localeCompare(secondGood);\n\n        case SortType.Length:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortParam, setSortParam] = useState<SortType | ''>('');\n  const [isReversed, setIsReversed] = useState(false);\n  const preparedGoods = getPreparedGoods(\n    goodsWithKeys,\n    { sortParam, isReversed },\n  );\n\n  const handleResetSorting = () => {\n    setIsReversed(false);\n    setSortParam('');\n  };\n\n  const isSorted = (sortParam || isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classes(\n            'button',\n            'is-info',\n            { 'is-light': sortParam !== SortType.Alphabetically },\n          )}\n          onClick={() => setSortParam(SortType.Alphabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classes(\n            'button',\n            'is-success',\n            { 'is-light': sortParam !== SortType.Length },\n          )}\n          onClick={() => setSortParam(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classes(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isSorted\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => handleResetSorting()}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => (\n          <li data-cy=\"Good\" key={good.id}>\n            {good.good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}